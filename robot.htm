<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Three.js - Modelo con Mucha Luz</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/three@0.128/examples/js/loaders/GLTFLoader.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/three@0.128/examples/js/controls/OrbitControls.js"></script>
    <style>
        body { margin: 0; overflow: hidden; }
        canvas { display: block; }
    </style>
</head>
<body>
    <script>
        // Crear la escena
        const scene = new THREE.Scene();
        scene.background = new THREE.Color(0xffa500); // Naranja arriba
        scene.fog = new THREE.FogExp2(0x87CEEB, 0.1); // Azul abajo

        // Cámara
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        camera.position.set(0, 1, 2);

        // Renderizador con sombras y más brillo
        const renderer = new THREE.WebGLRenderer({ antialias: true });
        renderer.setSize(window.innerWidth, window.innerHeight);
        renderer.shadowMap.enabled = true;
        renderer.shadowMap.type = THREE.PCFSoftShadowMap;
        renderer.toneMapping = THREE.ACESFilmicToneMapping; // Mejor exposición
        renderer.toneMappingExposure = 1.8; // Aumentar la luz global
        document.body.appendChild(renderer.domElement);

        // Luces
        const ambientLight = new THREE.AmbientLight(0xffffff, 1.2); // Luz ambiental más fuerte
        scene.add(ambientLight);

        const directionalLight = new THREE.DirectionalLight(0xffffff, 3);
        directionalLight.position.set(5, 10, 5);
        directionalLight.castShadow = true; 
        scene.add(directionalLight);

        // Luz puntual para iluminar desde otro ángulo
        const pointLight = new THREE.PointLight(0xffffff, 2, 15);
        pointLight.position.set(-3, 5, 3);
        pointLight.castShadow = true;
        scene.add(pointLight);

        // Luz Spot para iluminar el modelo directamente
        const spotLight = new THREE.SpotLight(0xffffff, 2);
        spotLight.position.set(0, 8, 5);
        spotLight.angle = Math.PI / 6;
        spotLight.penumbra = 0.3;
        spotLight.castShadow = true;
        scene.add(spotLight);

        // Suelo que recibe sombras
        const planeGeometry = new THREE.PlaneGeometry(10, 10);
        const planeMaterial = new THREE.ShadowMaterial({ opacity: 0.4 }); // Más visible
        const plane = new THREE.Mesh(planeGeometry, planeMaterial);
        plane.rotation.x = -Math.PI / 2;
        plane.position.y = -1;
        plane.receiveShadow = true;
        scene.add(plane);

        // Cargar modelo GLTF con sombras
        const loader = new THREE.GLTFLoader();
        loader.load('robot.glb', function (gltf) {
            const model = gltf.scene;
            model.traverse((node) => {
                if (node.isMesh) {
                    node.castShadow = true;
                    node.receiveShadow = true;
                }
            });

            scene.add(model);
        }, undefined, function (error) {
            console.error('Error al cargar el modelo:', error);
        });

        // Controles orbitales para mover la cámara con el mouse
        const controls = new THREE.OrbitControls(camera, renderer.domElement);
        controls.enableDamping = true;

        // Animación
        function animate() {
            requestAnimationFrame(animate);
            controls.update();
            renderer.render(scene, camera);
        }
        animate();

        // Ajustar tamaño al cambiar ventana
        window.addEventListener('resize', () => {
            renderer.setSize(window.innerWidth, window.innerHeight);
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
        });
    </script>
</body>
</html>
